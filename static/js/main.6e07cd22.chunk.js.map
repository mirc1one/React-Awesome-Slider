{"version":3,"sources":["utils.tsx","SliderArrow.tsx","Slider.tsx","Slide.tsx","useAnimate.tsx","Animate.jsx","SlideBackground.tsx","SlideImage.tsx","SlideTitle.tsx","App.tsx","index.tsx"],"names":["SliderContext","createContext","slidesRef","previousSlide","activeSlide","animationDuration","autoPlayInterval","allowedToScroll","timeline","gsap","SliderArrow","scrollNext","ref","useRef","svgRef","circleRef","useContext","useEffect","t","c","arrow","current","svg","circle","circleRadius","parseInt","getAttribute","circleCircumference","parseFloat","Math","PI","toFixed","set","strokeDashoffset","attr","add","to","duration","ease","eventCallback","restart","handlePauseOnHover","pause","handlePauseOnLeave","resume","addEventListener","removeEventListener","setTimeout","className","onClick","viewBox","r","cx","cy","fill","stroke","strokeWidth","aria-hidden","focusable","role","xmlns","d","Slider","props","sliderRef","createRef","slidesCount","state","startIndex","handlePrev","setState","handleNext","changeOnScroll","event","direction","deltaY","React","Children","count","children","Array","this","window","prevProps","prevState","timeout","Provider","value","map","child","index","cloneElement","instance","active","Component","SlideDiv","styled","div","Slide","forwardRef","forwardedRef","useState","isActive","setIsActive","wasActive","usePrevious","animate","useAnimate","type","slide","filter","_","from","background","image","title","getBoundingClientRect","$e","withAnimate","WrappedComponent","currentPosition","setCurrentPosition","position","toValue","fromValue","includes","opacityEnter","opacityLeave","fromTo","opacity","top","left","then","removeAttribute","breakpointHandler","breakpointAt","Object","keys","reverse","breakpoint","innerWidth","dispatchEvent","Event","BackgroundDiv","topPercent","leftPercent","rightPercent","bottomPercent","url","src","ImageDiv","ReactBreakLine","text","split","trim","TitleDiv","description","link","href","target","App","document","body","style","overflow","documentElement","height","innerHeight","width","0","600","1200","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6e07cd22.chunk.js","sourcesContent":["import { useEffect, useRef, createContext } from 'react';\n\nexport interface PositionProps {\n    topPercent?: number;\n    leftPercent?: number;\n    rightPercent?: number;\n    bottomPercent?: number;\n}\n\nexport interface PositionBreakpointProps {\n    [key: number]: PositionProps;\n}\n\nexport interface AnimationProps {\n    top: number;\n    left: number;\n    opacity: number;\n}\n\ninterface ContextProps {\n    slidesRef: HTMLElement[];\n    previousSlide: number | null;\n    activeSlide: number | null;\n    animationDuration: number;\n    autoPlayInterval: number;\n    allowedToScroll: boolean;\n}\n\nexport const usePrevious = (value: any): any => {\n    const ref = useRef();\n\n    useEffect(() => {\n        ref.current = value;\n    }, [value]);\n\n    return ref.current;\n};\n\nexport const SliderContext = createContext<ContextProps>({\n    slidesRef: null,\n    previousSlide: null,\n    activeSlide: null,\n    animationDuration: null,\n    autoPlayInterval: null,\n    allowedToScroll: null,\n});\n","import React, { useEffect, useRef, useContext } from 'react';\nimport gsap from 'gsap';\nimport { SliderContext } from './utils';\n\ninterface Props {\n    scrollNext: () => void;\n}\n\nconst timeline = gsap.timeline();\n\nconst SliderArrow: React.FC<Props> = ({ scrollNext }) => {\n    const ref = useRef<HTMLDivElement>(),\n        svgRef = useRef<SVGSVGElement>(),\n        circleRef = useRef<SVGCircleElement>(),\n        {\n            animationDuration,\n            autoPlayInterval,\n            activeSlide,\n            allowedToScroll,\n        } = useContext(SliderContext);\n\n    // calculate the offset array, de pe stack overflow\n    const calculateOffset = (t: number, c: number) => c - (c * t) / 100;\n\n    useEffect(() => {\n        const { current: arrow } = ref,\n            { current: svg } = svgRef,\n            { current: circle } = circleRef;\n\n        if (svg && circle && arrow) {\n            const circleRadius: number = parseInt(circle.getAttribute('r')),\n                circleCircumference: number = parseFloat(\n                    (circleRadius * Math.PI * 2).toFixed(2),\n                );\n\n            gsap.set(svg, {\n                strokeDashoffset: circleCircumference,\n            });\n\n            gsap.set(circle, {\n                attr: {\n                    'stroke-dasharray': `${circleCircumference} ${circleCircumference}`,\n                },\n            });\n\n            timeline.add(\n                gsap.to(circle, {\n                    strokeDashoffset: calculateOffset(100, circleCircumference),\n                    duration: autoPlayInterval / 1000,\n                    ease: 'steps(120)',\n                }),\n            );\n\n            timeline.eventCallback('onComplete', function () {\n                scrollNext();\n                timeline.restart();\n            });\n\n            const handlePauseOnHover = () => timeline.pause();\n            const handlePauseOnLeave = () => timeline.resume();\n\n            arrow.addEventListener('mouseover', handlePauseOnHover);\n            arrow.addEventListener('mouseleave', handlePauseOnLeave);\n\n            return () => {\n                arrow.removeEventListener('mouseover', handlePauseOnHover);\n                arrow.removeEventListener('mouseleave', handlePauseOnLeave);\n            };\n        }\n    }, []);\n\n    useEffect(() => {\n        if (timeline) {\n            timeline.pause();\n\n            setTimeout(() => {\n                timeline.restart();\n            }, animationDuration);\n        }\n    }, [activeSlide]);\n\n    return (\n        <div\n            ref={ref as React.MutableRefObject<HTMLDivElement>}\n            className=\"slider-arrow\"\n            onClick={() => allowedToScroll && scrollNext()}\n        >\n            <span className=\"progress\">\n                <svg ref={svgRef} viewBox=\"0 0 40 40\">\n                    <circle\n                        ref={circleRef}\n                        r=\"18\"\n                        cx=\"20\"\n                        cy=\"20\"\n                        fill=\"transparent\"\n                        stroke=\"#FFF\"\n                        strokeWidth=\"2\"\n                    ></circle>\n                </svg>\n            </span>\n            <span className=\"arrow\">\n                <svg\n                    aria-hidden=\"true\"\n                    focusable=\"false\"\n                    role=\"img\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    viewBox=\"0 0 256 512\"\n                >\n                    <path\n                        fill=\"currentColor\"\n                        d=\"M252.485 343.03l-7.07-7.071c-4.686-4.686-12.284-4.686-16.971 0L145 419.887V44c0-6.627-5.373-12-12-12h-10c-6.627 0-12 5.373-12 12v375.887l-83.444-83.928c-4.686-4.686-12.284-4.686-16.971 0l-7.07 7.071c-4.686 4.686-4.686 12.284 0 16.97l116 116.485c4.686 4.686 12.284 4.686 16.971 0l116-116.485c4.686-4.686 4.686-12.284-.001-16.97z\"\n                    ></path>\n                </svg>\n            </span>\n        </div>\n    );\n};\n\nexport default SliderArrow;\n","import React, { Component, createRef } from 'react';\nimport SliderArrow from './SliderArrow';\nimport { SliderContext } from './utils';\n\ninterface Props {\n    children: JSX.Element | JSX.Element[];\n    startIndex?: number;\n    animationDuration: number;\n    autoPlayInterval: number;\n}\n\ntype State = {\n    animationDuration: number | unknown;\n    previousSlide: number | null;\n    activeSlide: number;\n    autoPlayInterval: number;\n    allowedToScroll: boolean;\n};\n\nclass Slider extends Component<Props, State> {\n    private sliderRef = createRef<HTMLDivElement>();\n    private slidesRef: HTMLElement[] = null;\n    public slidesCount: number;\n\n    constructor(props: Props) {\n        super(props);\n\n        this.slidesCount = React.Children.count(props.children);\n        this.slidesRef = new Array(this.slidesCount).fill(createRef());\n    }\n\n    state: State = {\n        animationDuration: this.props.animationDuration ?? 1000,\n        previousSlide: null,\n        activeSlide: this.props.startIndex ?? 0,\n        autoPlayInterval: this.props.autoPlayInterval ?? 5000,\n        allowedToScroll: true,\n    };\n\n    componentDidMount(): void {\n        if (this.sliderRef.current) {\n            window.addEventListener(\n                'mousewheel',\n                this.changeOnScroll as EventListener,\n            );\n        }\n    }\n\n    componentDidUpdate(prevProps: Props, prevState: State): void {\n        // add a time delay in order to not match the exact animation with the setState&setTimeout because\n        // it might have some ms time delay and cause flickers\n        const timeout: number = (this.state.animationDuration as number) + 250;\n\n        if (prevState.allowedToScroll && !this.state.allowedToScroll) {\n            setTimeout(() => {\n                this.setState({\n                    allowedToScroll: true,\n                });\n            }, timeout);\n        }\n    }\n\n    componentWillUnmount(): void {\n        window.removeEventListener(\n            'mousewheel',\n            this.changeOnScroll as EventListener,\n        );\n    }\n\n    handlePrev = (): void => {\n        if (this.state.activeSlide > 0) {\n            this.setState({\n                previousSlide: this.state.activeSlide,\n                activeSlide: this.state.activeSlide - 1,\n                allowedToScroll: false,\n            });\n        } else {\n            this.setState({\n                previousSlide: this.state.activeSlide,\n                activeSlide: this.slidesCount - 1,\n                allowedToScroll: false,\n            });\n        }\n    };\n\n    handleNext = (): void => {\n        if (this.state.activeSlide < this.slidesCount - 1) {\n            this.setState({\n                previousSlide: this.state.activeSlide,\n                activeSlide: this.state.activeSlide + 1,\n                allowedToScroll: false,\n            });\n        } else {\n            this.setState({\n                previousSlide: this.state.activeSlide,\n                activeSlide: 0,\n                allowedToScroll: false,\n            });\n        }\n    };\n\n    changeOnScroll = (event: WheelEvent): void => {\n        const { deltaY } = event,\n            direction = deltaY <= 0 ? 'up' : 'down';\n\n        if (this.state.allowedToScroll) {\n            if (direction === 'up') {\n                this.handlePrev();\n            } else {\n                this.handleNext();\n            }\n        }\n    };\n\n    render(): JSX.Element {\n        return (\n            <div className=\"Slider\" ref={this.sliderRef}>\n                <SliderContext.Provider\n                    value={{\n                        slidesRef: this.slidesRef,\n                        previousSlide: this.state.previousSlide,\n                        activeSlide: this.state.activeSlide,\n                        animationDuration: this.state\n                            .animationDuration as number,\n                        autoPlayInterval: this.state.autoPlayInterval,\n                        allowedToScroll: this.state.allowedToScroll,\n                    }}\n                >\n                    {React.Children.map(\n                        this.props.children,\n                        (child: JSX.Element, index: number) => {\n                            return React.cloneElement(child, {\n                                ref: (instance: HTMLElement) => {\n                                    this.slidesRef[index] = instance;\n                                },\n                                active:\n                                    this.state.activeSlide === index\n                                        ? true\n                                        : false,\n                                index: index,\n                            });\n                        },\n                    )}\n\n                    <SliderArrow scrollNext={this.handleNext} />\n                </SliderContext.Provider>\n            </div>\n        );\n    }\n}\n\nexport default Slider;\n","import React, { useEffect, useState } from 'react';\nimport { usePrevious } from './utils';\nimport styled from 'styled-components';\n\ninterface Props {\n    active?: boolean;\n    children: JSX.Element | JSX.Element[];\n    index?: number;\n}\n\nconst SlideDiv = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100vw;\n    height: 100vh;\n`;\n\n// eslint-disable-next-line react/display-name\nconst Slide = React.forwardRef(\n    ({ active, children, index }: Props, forwardedRef) => {\n        const [isActive, setIsActive] = useState(active);\n        const wasActive = usePrevious(isActive);\n\n        useEffect(() => {\n            setIsActive(active);\n        }, [active]);\n\n        return (\n            <SlideDiv\n                ref={forwardedRef as React.MutableRefObject<HTMLDivElement>}\n                className={`slide ${\n                    isActive ? 'is-active' : ''\n                } slide-${index}`}\n            >\n                {React.Children.map(children, (child: JSX.Element) => {\n                    const animate =\n                        isActive && !wasActive\n                            ? 'enter'\n                            : !isActive && wasActive\n                            ? 'leave'\n                            : false;\n\n                    return React.cloneElement(child, {\n                        animate,\n                    });\n                })}\n            </SlideDiv>\n        );\n    },\n);\n\nexport default Slide;\n","import { useContext } from 'react';\nimport { SliderContext } from './utils';\n\nexport const useAnimate = (type: 'leave' | 'enter'): any => {\n    const { slidesRef, previousSlide, activeSlide } = useContext(SliderContext);\n    let slide;\n\n    // extra check because it might come empty instances and will throw Symbol Iterator error\n    try {\n        if (type === 'enter') {\n            slide = slidesRef.filter((_, index) => index === activeSlide)?.[0];\n        } else if (type === 'leave') {\n            slide = slidesRef.filter(\n                (_, index) => index === previousSlide,\n            )?.[0];\n        }\n\n        if (slide) {\n            const [background, image, title] = Array.from(slide.children);\n\n            return {\n                background: background.getBoundingClientRect(),\n                image: image.getBoundingClientRect(),\n                title: title.getBoundingClientRect(),\n            };\n        }\n    } catch ($e) {}\n\n    return false;\n};\n","// this one file is a JSX because for the love of my life, couldn't\n// make typescript work with a wrapped component with different prop types\n// spend 2+ hrs on this and gave up (still learning ts :D)\nimport React, { useEffect, useState, createRef, useContext } from 'react';\nimport { useAnimate } from './useAnimate';\nimport gsap from 'gsap/all';\nimport { SliderContext } from './utils';\n\nexport const withAnimate = (WrappedComponent, type) => {\n    // eslint-disable-next-line react/display-name\n    return (props) => {\n        const { animationDuration } = useContext(SliderContext);\n        const [currentPosition, setCurrentPosition] = useState(null);\n        const ref = createRef();\n        const { animate, position } = props;\n\n        const toValue = useAnimate('enter')?.[type];\n        const fromValue = useAnimate('leave')?.[type];\n\n        useEffect(() => {\n            const { current } = ref;\n\n            if (current && toValue && fromValue) {\n                if (['enter', 'leave'].includes(animate)) {\n                    const opacityEnter = animate === 'enter' ? 0 : 1,\n                        opacityLeave = animate === 'enter' ? 1 : 0;\n\n                    gsap.fromTo(\n                        current,\n                        {\n                            opacity: opacityEnter,\n                            top: fromValue.top,\n                            left: fromValue.left,\n                        },\n                        {\n                            opacity: opacityLeave,\n                            top: toValue.top,\n                            left: toValue.left,\n                            duration: animationDuration / 1000,\n                            ease: 'power1.inOut',\n                        },\n                    ).then(() => {\n                        // remove the style added and return to its original position\n                        current.removeAttribute('style');\n                    });\n                }\n            }\n        }, [animate]);\n\n        useEffect(() => {\n            const breakpointHandler = () => {\n                let breakpointAt;\n\n                for (const breakpoint of Object.keys(position).reverse()) {\n                    if (breakpoint <= window.innerWidth) {\n                        breakpointAt = breakpoint;\n\n                        break;\n                    }\n                }\n\n                if (breakpointAt) setCurrentPosition(position[breakpointAt]);\n            };\n\n            window.addEventListener('resize', breakpointHandler);\n            window.dispatchEvent(new Event('resize'));\n\n            return () => {\n                window.removeEventListener('resize', breakpointHandler);\n            };\n        }, [window.innerWidth]);\n\n        // actually rewrite the default position props\n        // because we have the value in this hoc, and only pass the values\n        // from the needed breakpoint on the styled component\n        return (\n            <WrappedComponent ref={ref} {...props} position={currentPosition} />\n        );\n    };\n};\n","import React, { forwardRef } from 'react';\nimport styled from 'styled-components';\nimport { PositionProps, PositionBreakpointProps } from './utils';\nimport { withAnimate } from './Animate';\n\ninterface Props {\n    url: string;\n    position: PositionBreakpointProps;\n}\n\nconst BackgroundDiv = styled.div`\n    top: ${(props: PositionProps) =>\n        props.topPercent ? `${props.topPercent}%` : `auto`};\n    left: ${(props: PositionProps) =>\n        props.leftPercent ? `${props.leftPercent}%` : `auto`};\n    right: ${(props: PositionProps) =>\n        props.rightPercent ? `${props.rightPercent}%` : `auto`};\n    bottom: ${(props: PositionProps) =>\n        props.bottomPercent ? `${props.bottomPercent}%` : `auto`};\n`;\n\n// eslint-disable-next-line react/display-name\nconst SlideBackground = forwardRef(({ url, position }: Props, forwardedRef) => {\n    return (\n        <BackgroundDiv\n            ref={forwardedRef as React.MutableRefObject<HTMLDivElement>}\n            className=\"slide-background\"\n            {...position}\n        >\n            <img src={url} />\n        </BackgroundDiv>\n    );\n});\n\nexport default withAnimate(SlideBackground, 'background');\n","import React, { forwardRef } from 'react';\nimport styled from 'styled-components';\nimport { PositionProps, PositionBreakpointProps } from './utils';\nimport { withAnimate } from './Animate.jsx';\n\ninterface Props {\n    url: string;\n    position: PositionBreakpointProps;\n}\n\nconst ImageDiv = styled.div`\n    top: ${(props: PositionProps) =>\n        props.topPercent ? `${props.topPercent}%` : `auto`};\n    left: ${(props: PositionProps) =>\n        props.leftPercent ? `${props.leftPercent}%` : `auto`};\n    right: ${(props: PositionProps) =>\n        props.rightPercent ? `${props.rightPercent}%` : `auto`};\n    bottom: ${(props: PositionProps) =>\n        props.bottomPercent ? `${props.bottomPercent}%` : `auto`};\n`;\n\n// eslint-disable-next-line react/display-name\nconst SlideImage = forwardRef(({ url, position }: Props, forwardedRef) => {\n    return (\n        <ImageDiv\n            ref={forwardedRef as React.MutableRefObject<HTMLDivElement>}\n            className=\"slide-image\"\n            {...position}\n        >\n            <img src={url} />\n        </ImageDiv>\n    );\n});\n\nexport default withAnimate(SlideImage, 'image');\n","import React, { forwardRef } from 'react';\nimport styled from 'styled-components';\nimport { PositionProps, PositionBreakpointProps } from './utils';\nimport { withAnimate } from './Animate';\n\ninterface Props {\n    title: string;\n    description?: string;\n    link?: string;\n    position: PositionBreakpointProps;\n}\n\nconst ReactBreakLine = (text: string) => {\n    return text.split('\\\\n').map((text: string, index: number) => {\n        return <div key={index}>{text.trim()}</div>;\n    });\n};\n\nconst TitleDiv = styled.div`\n    top: ${(props: PositionProps) =>\n        props.topPercent ? `${props.topPercent}%` : `auto`};\n    left: ${(props: PositionProps) =>\n        props.leftPercent ? `${props.leftPercent}%` : `auto`};\n    right: ${(props: PositionProps) =>\n        props.rightPercent ? `${props.rightPercent}%` : `auto`};\n    bottom: ${(props: PositionProps) =>\n        props.bottomPercent ? `${props.bottomPercent}%` : `auto`};\n`;\n\n// eslint-disable-next-line react/display-name\nconst SlideTitle = forwardRef(\n    ({ title, description, link, position }: Props, forwardedRef) => {\n        return (\n            <TitleDiv\n                ref={forwardedRef as React.MutableRefObject<HTMLDivElement>}\n                className=\"slide-title\"\n                {...position}\n            >\n                <h1>{ReactBreakLine(title)}</h1>\n                {description && (\n                    <div className=\"description\">\n                        {ReactBreakLine(description)}\n                    </div>\n                )}\n                {link && (\n                    <a href={link} target=\"_self\">\n                        Read more\n                    </a>\n                )}\n            </TitleDiv>\n        );\n    },\n);\n\nexport default withAnimate(SlideTitle, 'title');\n","import React, { useEffect } from 'react';\nimport Slider from './Slider';\nimport Slide from './Slide';\nimport SlideBackground from './SlideBackground';\nimport SliderImage from './SlideImage';\nimport SlideTitle from './SlideTitle';\n\nfunction App(): JSX.Element {\n    useEffect(() => {\n        document.body.style.overflow = 'hidden';\n        window.addEventListener('resize', () => {\n            document.documentElement.style.height = document.body.style.height = `${window.innerHeight}px`;\n            document.documentElement.style.width = document.body.style.width = `${window.innerWidth}px`;\n        });\n        window.dispatchEvent(new Event('resize'));\n    }, []);\n\n    const sliderDefaults = {\n        startIndex: 0,\n        animationDuration: 1000,\n        autoPlayInterval: 6000,\n    };\n\n    return (\n        <Slider {...sliderDefaults}>\n            <Slide>\n                <SlideBackground\n                    url={'https://picsum.photos/id/1024/1200/600'}\n                    position={{\n                        0: {\n                            topPercent: 7,\n                            leftPercent: -50,\n                        },\n                        600: {\n                            topPercent: 7,\n                            leftPercent: -2,\n                        },\n                        1200: {\n                            topPercent: 12,\n                            leftPercent: 15,\n                        },\n                    }}\n                />\n                <SliderImage\n                    url={'https://picsum.photos/id/1024/800/400'}\n                    position={{\n                        0: {\n                            topPercent: 31,\n                            leftPercent: -24,\n                        },\n                        600: {\n                            topPercent: 30,\n                            leftPercent: 4,\n                        },\n                        1200: {\n                            topPercent: 30,\n                            leftPercent: 45,\n                        },\n                    }}\n                />\n                <SlideTitle\n                    title=\"I AM ERROR\\n A Fullstack \\nWebdeveloper\"\n                    description=\"Want to hire me? Contact me at \\n mircea.bratu@icloud.com.\\n Over 5 years of experience. \\n Or click the link to checkout \\n my portfolio.\"\n                    link={'https://iamerror.ro/'}\n                    position={{\n                        0: {\n                            topPercent: 52,\n                            leftPercent: 20,\n                        },\n                        600: {\n                            topPercent: 46,\n                            leftPercent: 50,\n                        },\n                        1200: {\n                            topPercent: 40,\n                            leftPercent: 33,\n                        },\n                    }}\n                />\n            </Slide>\n\n            <Slide>\n                <SlideBackground\n                    url={'https://picsum.photos/id/1031/1200/600'}\n                    position={{\n                        0: {\n                            topPercent: 15,\n                            leftPercent: 20,\n                        },\n                        600: {\n                            topPercent: 15,\n                            leftPercent: 20,\n                        },\n                        1200: {\n                            topPercent: 25,\n                            leftPercent: 20,\n                        },\n                    }}\n                />\n                <SliderImage\n                    url={'https://picsum.photos/id/1031/800/400'}\n                    position={{\n                        0: {\n                            topPercent: 27,\n                            leftPercent: 11,\n                        },\n                        600: {\n                            topPercent: 27,\n                            leftPercent: 51,\n                        },\n                        1200: {\n                            topPercent: 50,\n                            leftPercent: 60,\n                        },\n                    }}\n                />\n                <SlideTitle\n                    title=\"I like to build \\n awesome stuff \\n and play with animations\"\n                    description=\"Lorem ipsum dolor sit amet, \\nconsectetur adipiscing elit. \\nQuo modo autem philosophus loquitur? \\nCum audissem Antiochum\"\n                    link={'https://google.ro/'}\n                    position={{\n                        0: {\n                            topPercent: 44,\n                            leftPercent: 23,\n                        },\n                        600: {\n                            topPercent: 36,\n                            leftPercent: 37,\n                        },\n                        1200: {\n                            topPercent: 36,\n                            leftPercent: 45,\n                        },\n                    }}\n                />\n            </Slide>\n\n            <Slide>\n                <SlideBackground\n                    url={'https://picsum.photos/id/222/1200/600'}\n                    position={{\n                        0: {\n                            topPercent: 19,\n                            leftPercent: 7,\n                        },\n                        1200: { topPercent: 17, leftPercent: 10 },\n                    }}\n                />\n                <SliderImage\n                    url={'https://picsum.photos/id/222/800/400'}\n                    position={{\n                        0: {\n                            topPercent: 39,\n                            leftPercent: 18,\n                        },\n                        1200: {\n                            topPercent: 23,\n                            leftPercent: 18,\n                        },\n                    }}\n                />\n                <SlideTitle\n                    title=\"I try to find\\n some interesting titles \\n for these...\"\n                    description=\"Tu enim ista lenius, hic Stoicorum more \\n nos vexat. Aliter enim explicari, quod \\n quaeritur, non potest. Id quaeris, inquam, \\n in quo, utrum respondero, verses te huc \\n atque illuc necesse est.\"\n                    link={'https://google.ro/'}\n                    position={{\n                        0: {\n                            topPercent: 48,\n                            leftPercent: 3,\n                        },\n                        600: {\n                            topPercent: 38,\n                            leftPercent: 64,\n                        },\n                        1200: {\n                            topPercent: 30,\n                            leftPercent: 52,\n                        },\n                    }}\n                />\n            </Slide>\n\n            <Slide>\n                <SlideBackground\n                    url={'https://picsum.photos/id/555/1200/600'}\n                    position={{\n                        0: {\n                            topPercent: 32,\n                            leftPercent: -40,\n                        },\n                        600: {\n                            topPercent: 12,\n                            leftPercent: 15,\n                        },\n                        1200: {\n                            topPercent: 12,\n                            leftPercent: 35,\n                        },\n                    }}\n                />\n                <SliderImage\n                    url={'https://picsum.photos/id/555/800/400'}\n                    position={{\n                        0: {\n                            topPercent: 30,\n                            leftPercent: 10,\n                        },\n                        600: {\n                            topPercent: 30,\n                            leftPercent: 40,\n                        },\n                        1200: { topPercent: 22, leftPercent: 40 },\n                    }}\n                />\n                <SlideTitle\n                    title=\"I'm not the best copy \\n so here goes the 4th \\n title\"\n                    description=\"Tum ille timide vel potius \\n verecunde: Facio, inquit. Quod non faceret, si in \\n voluptate summum bonum poneret.\"\n                    link={'https://google.ro/'}\n                    position={{\n                        0: {\n                            topPercent: 46,\n                            leftPercent: 20,\n                        },\n                        600: {\n                            topPercent: 46,\n                            leftPercent: 60,\n                        },\n                        1200: { topPercent: 50, leftPercent: 65 },\n                    }}\n                />\n            </Slide>\n        </Slider>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}